DROP TABLE IF EXISTS User_Movie;
DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS Addresses;
DROP TABLE IF EXISTS Dates_Audit;
DROP TABLE IF EXISTS Roles;
DROP TABLE IF EXISTS Movie_Actor;
DROP TABLE IF EXISTS Movies;
DROP TABLE IF EXISTS Directors;
DROP TABLE IF EXISTS Actors;

CREATE TABLE Addresses
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    street   VARCHAR(100) NOT NULL,
    city     VARCHAR(50)  NOT NULL,
    country  VARCHAR(50)  NOT NULL,
    zip_code VARCHAR(5)   NOT NULL
);
CREATE TABLE Dates_Audit
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_at TIMESTAMP NOT NULL,
    updated_at TIMESTAMP NOT NULL
);
CREATE TABLE Roles
(
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name VARCHAR(25) NOT NULL
);
CREATE TABLE Users
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username      VARCHAR(30) NOT NULL UNIQUE,
    password      VARCHAR     NOT NULL,
    first_name    VARCHAR(50),
    last_name     VARCHAR(50),
    age           INT CHECK (age > 17 and age < 126),
    email         VARCHAR(65),
    phone_number  VARCHAR(25),
    address_id    BIGINT REFERENCES Addresses (id),
    date_audit_id BIGINT REFERENCES Dates_Audit (id),
    role_id       BIGINT REFERENCES Roles (id)
);

CREATE TABLE Directors
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name  VARCHAR(50) NOT NULL,
    age        INT CHECK (age > 17 and age < 126)
);
CREATE TABLE Actors
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name  VARCHAR(50) NOT NULL,
    age        INT CHECK (age > 17 and age < 126)
);
CREATE TABLE Movies
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title        VARCHAR(100) NOT NULL,
    release_date DATE         NOT NULL,
    director_id  BIGINT REFERENCES Directors (id)
);
CREATE TABLE Movie_Actor
(
    movie_id BIGINT REFERENCES Movies (id),
    actor_id BIGINT REFERENCES Actors (id),
    PRIMARY KEY (actor_id, movie_id)
);

CREATE TABLE User_Movie
(
    user_id  BIGINT REFERENCES Users (id),
    movie_id BIGINT REFERENCES Movies (id),
    PRIMARY KEY (movie_id, user_id)
);

INSERT INTO Roles(role_name)
VALUES ('ROLE_ADMIN');
INSERT INTO Roles(role_name)
VALUES ('ROLE_USER');
INSERT INTO Users(username, password, role_id)
VALUES ('admin', '$2a$10$GNe4j6LVS70ZiUHGA/yaWuIyRMvMrkx8td8jdcIFMGp/N4LwHmyti', 1);